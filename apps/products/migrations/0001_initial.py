# Generated by Django 3.2.5 on 2023-08-20 22:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=200)),
                ('email', models.EmailField(db_column='email', max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
            ],
            options={
                'db_table': 'tbl_customers',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(db_column='product_id', max_length=200)),
                ('product_title', models.CharField(db_column='product_title', max_length=200)),
                ('product_price', models.FloatField(db_column='product_price')),
                ('product_image', models.URLField(db_column='product_image')),
                ('review_score', models.FloatField(db_column='review_score', default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('customer', models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.CASCADE, to='products.customer')),
            ],
            options={
                'db_table': 'tbl_customer_products',
                'ordering': ['id'],
                'unique_together': {('customer', 'product_id')},
            },
        ),
    ]
